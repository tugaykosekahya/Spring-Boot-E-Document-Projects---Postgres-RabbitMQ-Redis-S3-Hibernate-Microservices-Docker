server:
  port: ${PDF_IMZALAMA_SERVER_PORT}
  servlet:
    context-path: ${SVR_CONTEXT_PATH}

spring:
  rabbitmq:
    host: rabbit-service
    port: ${EVDBELGE_RBT_SERVICE_PORT}
    username: ${EVDBELGE_RBT_USERNAME}
    password: ${EVDBELGE_RBT_PASSWORD}
    listener:
      simple:
        retry:
          enabled: ${EVDBELGE_RBT_RETRY_ENABLED}
          max-attempts: ${EVDBELGE_RBT_RETRY_MAX_ATTMP}
          max-interval: ${EVDBELGE_RBT_RETRY_MAX_INTERVAL}
          initial-interval: ${EVDBELGE_RBT_RETRY_INITIAL_INTERVAL}
        prefetch: 1
    evdbelge:
      exchange: ${EVDBELGE_RBT_EXCHANGE}
      pdf:
        queue: ${EVDBELGE_RBT_PDF_QUEUE}
        routingKey: ${EVDBELGE_RBT_PDF_ROUTINGKEY}
      pdfImza:
        queue: ${EVDBELGE_RBT_PDF_IMZALI_QUEUE}
        routingKey: ${EVDBELGE_RBT_PDF_IMZALI_ROUTINGKEY}
      count: ${PDF_IMZA_CONSUMER_COUNT}
  profiles:
    active: ${ENVIRONMENT}

api:
  name: ${APP_NAME}
  url: ${SERVICE_URL}
  admin:
    userName: ${ADMIN_USER_NAME}
    password: ${ADMIN_PASSWORD}
    role: ${ADMIN_ROLE}
  evdbelge:
    userName: ${EVDBELGE_USER_NAME}
    password: ${EVDBELGE_PASSWORD}
    role: ${EVDBELGE_ROLE}

redis:
  host: ${REDIS_SERVICE_HOST}
  password: ${REDIS_SERVICE_PASSWORD}
  port: ${REDIS_SERVICE_PORT}

elastic:
  apm:
    enable: ${ELASTIC_APM_ENABLE}
    service-name: ${POD_NAME:}
    application-packages: ${ELASTIC_APM_APP_PACKAGE}
    server-url: ${ELASTIC_APM_SERVICE_URL}
    secret-token: ${ELASTIC_APM_SECRET_TOKEN}
    verify-server-cert: ${ELASTIC_APM_VERIFY_SERVER_CERT}
#
#logging:
#  level:
#    org:
#      hibernate:
#        SQL: OFF
#        type:
#          descriptor:
#            sql:
#              BasicBinder: TRACE
postgres:
  evdbelge:
    datasource:
      driver-class: ${POSTGRES_DATABASE_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}
      jdbc: ${POSTGRES_EVDBELGE_DATABASE_URL}
      username: ${POSTGRES_EVDBELGE_DATABASE_USERNAME}
      password: ${POSTGRES_EVDBELGE_DATABASE_PASSWORD}
      maximum-pool-size: ${POSTGRES_EVDBELGE_DATABASE_MAX_POOL_SIZE}
      minimum-idle: ${POSTGRES_EVDBELGE_DATABASE_MIN_IDLE}
      connectionTimeout: 30000
      validationTimeout: 5000
      maxLifetime: 1800000
      hibernate:
        dialect: ${POSTGRES_DATABASE_JPA_PROP_HIBERNATE_DIALECT:tr.gov.gib.evdbelge.evdbelgepdfimzalama.config.PostgresDialect}
        show_sql: ${POSTGRES_DATABASE_SHOW_SQL}

objectstorage:
  s3FileSeperator: ${S3_FILE_SEPERATOR}
  s3FileExtention: ${S3_FILE_EXTENSION}
  s3Endpoint: ${S3_ENDPOINT}
  s3Namespace: ${S3_NAMESPACE}
  s3AccessKey: ${S3_ACCESS_KEY}
  s3SecretKey: ${S3_SECRET_KEY}
  s3BucketNamePrefix: ${S3_BUCKET_NAME_PREFIX}


springdoc:
  swagger-ui:
    path: /api
    operationsSorter: alpha
    tagsSorter: alpha
    docExpansion: none
    url: /v3/api-docs

management:
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      probes:
        enabled: true
      group:
        custom:
          include: diskSpace,ping,customCheck
          show-components: always
          show-details: always

app:
  podName: ${POD_NAME:log}
  logPath: logs/${LOG_PATH}

signer:
  server:
    url: ${SIGN_SERVER_URL}
    clientId: ${SIGN_SERVER_CLIENT_ID}
    algorithm: ${SIGN_SERVER_ALGORITHM}
    certId: ${SIGN_SERVER_CERT_ID}
  zamanDamgasi:
      url: ${ZAMAN_DAMGASI_URL}
      user: ${ZAMAN_DAMGASI_USER}
      password: ${ZAMAN_DAMGASI_PASSWORD}

