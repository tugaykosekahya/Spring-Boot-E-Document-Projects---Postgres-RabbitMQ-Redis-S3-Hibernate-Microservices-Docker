apply plugin: 'war'
apply plugin: 'maven'

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

dependencies {
		compile group: 'backport-util-concurrent', name: 'backport-util-concurrent', version: '2.1'
		compile group: 'cglib', name: 'cglib', version: '2.2.2'
		compile group: 'com.cs.dfs', name: 'dfs', version:'latest.integration'
		compile group: 'com.cs.side', name:'gridexport4csap' , version:'latest.integration'
		compile group: 'com.sun.corba', name: 'orb', version: '9.1'
		compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.0.1'
		compile group: 'net.sourceforge.barbecue', name: 'barbecue', version: '1.5-beta1'
		compile group: 'org.apache.axis2', name: 'axis2-adb', version: '1.4.1'
		compile group: 'org.apache.axis2', name: 'axis2-kernel', version: '1.4.1'		
		compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
		compile group: 'org.apache.neethi', name: 'neethi', version: '2.0.5'
		compile group: 'org.apache.poi', name: 'poi', version: '3.9'
		compile group: 'org.apache.poi', name: 'poi', version:'3.11'
		compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.9'
		compile group: 'org.apache.ws.commons.axiom', name: 'axiom-api', version: '1.2.7'
		compile group: 'org.apache.ws.commons.axiom', name: 'axiom-impl', version: '1.2.7'
		compile group: 'org.apache.ws.commons.schema', name: 'XmlSchema', version: '1.4.7'			
		compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.3.6'
		compile group: 'org.eclipse.birt.runtime.3_7_1', name: 'org.apache.xml.serializer', version: '2.7.1'
		compile group: 'org.json', name: 'json', version: '20090211'
		compile group: 'wsdl4j', name: 'wsdl4j', version: '1.6.2'
		testCompile group: 'junit', name: 'junit', version:'4.12'
		
}

String deploymentDir = "${System.env.GR_TMCT_HM}/webapps"

task deploy(type: Copy) {
    from war.archivePath
    into "${System.env.GR_TMCT_HM}/webapps"
    println "${System.env.GR_TMCT_HM}/webapps"
    println "${System.env.GR_TMCT_HM}/webapps"
	println "Deploy edildi.."    
}

boolean javaDeployed = false

//Copy the files from the war out into an exploded directory
task explode(type: Copy, dependsOn: 'war')  {
    into buildDir.name + '/exploded'
    with war
}

task deployExploded(dependsOn: ['copyExplodedOther', 'copyExplodedJava']) {
    ext.deployFile = new File(deploymentDir + '/evdebelge-server.war.dodeploy')
    ext.deployedFile = new File(deploymentDir + '/evdebelge-server.war.deployed')
    //outputs.file deployFile
}
deployExploded.doLast {
    if (javaDeployed) {
    	println "xxx:" +deployFile 
        deployFile.createNewFile()
        println "Created deployment marker file, Java classes updated."
    }
    else if (!deployedFile.exists()) {  
		deployFile.createNewFile()
		println "Created deployment marker file, not yet deployed."
    }
}

//Don't copy Java files if they haven't changed
task copyExplodedJava(type: Copy, dependsOn: 'explode') {
    from explode
    into deploymentDir + "/evdebelge-server"
    
    include "**/*.class"
    include "**/*.jar"
}
copyExplodedJava.doLast {
    javaDeployed = true
}

task copyExplodedOther(type: Copy, dependsOn: 'explode') {
	println "xxx:" +deploymentDir 
    from explode
    into deploymentDir + "/evdebelge-server"
    exclude "**/*.class"
    exclude "**/*.jar"
}

task undeploy (type: Delete) {
 	delete deploymentDir + "/"
    delete deploymentDir + "/"
    delete deploymentDir + "/"
    delete deploymentDir + "/"
}

task reDeploy {
    ext.deployFile = new File(deploymentDir + '/.war.dodeploy')
    //outputs.file deployFile
}
reDeploy.doLast {
    //this should only redeploy if the classes have changed, not the view files
    deployFile.createNewFile()
    println "Created deployment marker file"
}

 task stopTomcat(type:Exec) {
    ignoreExitValue true
    println "Stopting instance on: ${System.env.GR_TMCT_HM} "
    workingDir "${System.env.GR_TMCT_HM}" + '/bin/'
    commandLine  'cmd', '/c', 'for /f "tokens=5" %a in (\'netstat -aon ^| find "8009"\') do taskkill /f /pid %a'
    commandLine  'cmd', '/c', 'for /f "tokens=2" %a in (\'tasklist  /FI "Windowtitle eq Tomcat" /nh\') do taskkill /f /pid %a'
}

task startTomcat(type:Exec) {

    ignoreExitValue true
    workingDir "${System.env.GR_TMCT_HM}" + '/bin/'
    commandLine  'cmd', '/c', 'startup.bat'
}

task makePretty(type: Delete) {

        delete fileTree("${System.env.GR_TMCT_HM}" +'/webapps//WEB-INF/lib/') {
        include "${rootProject.name}"+'*.jar'
    }
}
task copyJarToBin(type: Copy) {
       dependsOn install
       from "${buildDir}/libs/${rootProject.name}-${version}.jar"
       into "${System.env.GR_TMCT_HM}" +"/webapps//WEB-INF/lib/"
}
